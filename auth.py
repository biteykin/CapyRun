# auth.py
import streamlit as st
from supabase import create_client, Client

_SB_URL = st.secrets["supabase"]["url"]
_SB_KEY = st.secrets["supabase"]["key"]

def get_supabase() -> Client:
    return create_client(_SB_URL, _SB_KEY)

def auth_sidebar(supabase: Client, show_when_authed: bool = False):
    """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç user –ª–∏–±–æ None.
       –†–µ–∂–∏–º ('–í—Ö–æ–¥'|'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è') —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ st.session_state['auth_mode'].
    """
    session = supabase.auth.get_session()
    user = session.user if session else None

    # –ï—Å–ª–∏ —É–∂–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω
    if user and not show_when_authed:
        st.markdown("### –ê–∫–∫–∞—É–Ω—Ç")
        st.caption(f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ **{user.email}**")
        if st.button("–í—ã–π—Ç–∏", use_container_width=True):
            supabase.auth.sign_out()
            st.experimental_rerun()
        return user

    st.markdown("### –í—Ö–æ–¥ / –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")

    # --- —Ä–µ–∂–∏–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ª–µ–Ω–¥–∏–Ω–≥–æ–º ---
    default_mode = st.session_state.get("auth_mode", "login")
    modes = {"–í—Ö–æ–¥": "login", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è": "signup"}

    # –í—ã—Å—Ç–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –ø–æ —Ç–µ–∫—É—â–µ–º—É —Ä–µ–∂–∏–º—É
    mode_names = list(modes.keys())
    current_index = 0 if modes[mode_names[0]] == default_mode else 1

    chosen = st.radio(
        "–†–µ–∂–∏–º",
        mode_names,
        index=current_index,
        horizontal=True,
        label_visibility="collapsed",
    )
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –ø–µ—Ä–µ–∫–ª—é—á–∏–ª —Ä–∞–¥–∏–æ ‚Äî –æ–±–Ω–æ–≤–∏–º session_state
    st.session_state["auth_mode"] = modes[chosen]

    # --- —Ñ–æ—Ä–º—ã ---
    if st.session_state["auth_mode"] == "login":
        with st.form("auth_login", clear_on_submit=False):
            email = st.text_input("Email", key="auth_email_login")
            password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="auth_pwd_login")
            submit = st.form_submit_button("–í–æ–π—Ç–∏", use_container_width=True)
        if submit:
            try:
                res = supabase.auth.sign_in_with_password({"email": email, "password": password})
                if res.user:
                    st.success("–ì–æ—Ç–æ–≤–æ! –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî –≤ —Å–∞–π–¥–±–∞—Ä–µ —Å–ª–µ–≤–∞ üëà")
                    st.experimental_rerun()
            except Exception as e:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.")
                st.caption(str(e))
    else:
        with st.form("auth_signup", clear_on_submit=False):
            email = st.text_input("Email", key="auth_email_signup")
            password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="auth_pwd_signup")
            submit = st.form_submit_button("–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", use_container_width=True)
        if submit:
            try:
                res = supabase.auth.sign_up({"email": email, "password": password})
                if res.user:
                    st.success("–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω! –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî –≤ —Å–∞–π–¥–±–∞—Ä–µ —Å–ª–µ–≤–∞ üëà")
                    # –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∞ –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email.
                    # –û—Å—Ç–∞–≤–∏–º —Ä–µ–∂–∏–º –Ω–∞ 'login', —á—Ç–æ–±—ã –±—ã–ª–æ –≤–∏–¥–Ω–æ —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞.
                    st.session_state["auth_mode"] = "login"
                    st.experimental_rerun()
            except Exception as e:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç.")
                st.caption(str(e))

    return session.user if session else None

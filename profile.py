# profile.py
from typing import Any, Dict, Optional
import streamlit as st

# –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_PROFILE: Dict[str, Any] = {
    "hr_rest": 50,
    "hr_max": 190,
    "zone_bounds_text": "110,130,145,160,175",
}

# --- —É—Ç–∏–ª–∏—Ç—ã -----------------------------------------------------------------

def _uid(user: Any) -> Optional[str]:
    """–î–æ—Å—Ç–∞—ë—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ dict –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞."""
    if isinstance(user, dict):
        return user.get("id")
    return getattr(user, "id", None)

def _safe_select_profile(supabase, user_id: str) -> Optional[Dict[str, Any]]:
    """–í–µ—Ä–Ω—ë—Ç —Å—Ç—Ä–æ–∫—É –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ None. –õ—é–±—ã–µ –æ—à–∏–±–∫–∏ –Ω–µ —Ä–æ–Ω—è—é—Ç UI."""
    try:
        res = supabase.table("user_profiles").select("*").eq("id", user_id).execute()
        data = getattr(res, "data", None) or []
        return data[0] if data else None
    except Exception:
        st.warning("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ user_profiles (RLS/–ø–æ–ª–∏—Ç–∏–∫–∏). –ò—Å–ø–æ–ª—å–∑—É—é –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        return None

def save_profile(supabase, user_id: str, hr_rest: int, hr_max: int, zones: str) -> bool:
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Å —è–≤–Ω—ã–º select‚Üíupdate/insert (–±–µ–∑ upsert).
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, –∏–Ω–∞—á–µ False.
    """
    # –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å?
    try:
        res = supabase.table("user_profiles").select("id").eq("id", user_id).execute()
        exists = bool(getattr(res, "data", []) )
    except Exception:
        return False

    try:
        if exists:
            supabase.table("user_profiles").update({
                "hr_rest": hr_rest,
                "hr_max": hr_max,
                "zone_bounds_text": zones,
            }).eq("id", user_id).execute()
        else:
            supabase.table("user_profiles").insert({
                "id": user_id,
                "hr_rest": hr_rest,
                "hr_max": hr_max,
                "zone_bounds_text": zones,
            }).execute()
        return True
    except Exception:
        return False

# --- –ø—É–±–ª–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ -------------------------------------------------------

def load_or_init_profile(supabase, user_id: str) -> Dict[str, Any]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç ‚Äî –ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç.
    –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Ä–æ–Ω—è–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π –ë–î –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç.
    """
    if not user_id:
        return {**DEFAULT_PROFILE, "id": None}

    # 1) –ø—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å
    row = _safe_select_profile(supabase, user_id)
    if row:
        return row

    # 2) –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç ‚Äî –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—É—é
    default_row = {"id": user_id, **DEFAULT_PROFILE}
    created_ok = save_profile(supabase, user_id, default_row["hr_rest"], default_row["hr_max"], default_row["zone_bounds_text"])

    if created_ok:
        reread = _safe_select_profile(supabase, user_id)
        if reread:
            return reread

    # 3) —Å–æ–≤—Å–µ–º –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ ‚Äî –≤–µ—Ä–Ω—ë–º –¥–µ—Ñ–æ–ª—Ç –∏ –¥–∞–¥–∏–º UI —Ä–∞–±–æ—Ç–∞—Ç—å
    return default_row

def profile_sidebar(supabase, user: Dict[str, Any], profile_row: Dict[str, Any]):
    """
    –†–µ–Ω–¥–µ—Ä–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: hr_rest, hr_max, zone_bounds_text.
    """
    st.markdown("### ‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞")

    hr_rest = st.number_input(
        "–ü—É–ª—å—Å –≤ –ø–æ–∫–æ–µ (HRrest)",
        min_value=30, max_value=100,
        value=int(profile_row.get("hr_rest", DEFAULT_PROFILE["hr_rest"])),
        step=1,
        key="ui_hr_rest",
    )
    hr_max = st.number_input(
        "–ú–∞–∫—Å. –ø—É–ª—å—Å (HRmax)",
        min_value=140, max_value=230,
        value=int(profile_row.get("hr_max", DEFAULT_PROFILE["hr_max"])),
        step=1,
        key="ui_hr_max",
    )
    zone_bounds_text = st.text_input(
        "–ì—Ä–∞–Ω–∏—Ü—ã –∑–æ–Ω HR (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)",
        value=str(profile_row.get("zone_bounds_text", DEFAULT_PROFILE["zone_bounds_text"])),
        help="–ù–∞–ø—Ä.: 110,130,145,160,175",
        key="ui_zone_bounds",
    )

    if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"):
        uid = _uid(user)
        ok = bool(uid) and save_profile(
            supabase,
            uid,
            int(hr_rest),
            int(hr_max),
            zone_bounds_text.strip(),
        )
        if ok:
            st.success("–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
        else:
            st.error("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω (–ø—Ä–æ–≤–µ—Ä—å RLS/–ø–æ–ª–∏—Ç–∏–∫–∏ –≤ Supabase).")

    return int(hr_rest), int(hr_max), zone_bounds_text
